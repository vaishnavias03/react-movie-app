{"version":3,"sources":["Components/Movie.js","Components/Genre.js","Components/MovieForm.js","Components/MovieContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","styled","Card","Desc","CardImgOverlay","Movie","item","fav","setFav","isFavorite","setMovie","movie","Favourite","ListFavourites","className","ButtonGroup","Button","color","onClick","url","id","window","location","href","filter","mov","Delete","type","onSubmit","e","preventDefault","console","log","AddFav","title","overview","vote_average","poster_path","AddFAv","style","width","height","src","alt","Badge","backgroundColor","fontFamily","float","margin","Genres","MovieForm","query","setQuery","setUrl","pg","setPg","where","setWhere","genre","setGenre","useState","useEffect","document","searchMovies","a","fetch","res","json","data","results","search","popular","Genre","callPages","Form","Row","outline","map","items","name","InputGroup","Input","placeholder","onChange","target","value","SearchRounded","ArrowBack","ArrowForward","MovieContainer","marginBottom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9afa4f06.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Badge, Button, ButtonGroup, Card, CardImgOverlay } from 'reactstrap'\r\nimport styled from 'styled-components';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { Delete } from '@material-ui/icons';\r\n\r\n\r\nconst Movie= ({item, fav, setFav, setMovie, movie, Favourite, isFavorite, ListFavourites}) =>{\r\n    \r\n    \r\n\r\n    const viewMovie = () =>{\r\n        const url = \"https://www.themoviedb.org/movie/\" + item.id\r\n        window.location.href = url\r\n    }\r\n\r\n    \r\n    const AddFav = ({e, item}) =>{\r\n        e.preventDefault()\r\n        console.log(item.id)\r\n    }\r\n    const AddFAv = (item) =>{\r\n            item.Favourite = true\r\n\r\n            setFav([\r\n            ...fav,\r\n            {\r\n                 id: item.id, \r\n                 title: item.title, \r\n                 Favourite: true, \r\n                 overview: item.overview,\r\n                 vote_average: item.vote_average,\r\n                 poster_path: item.poster_path\r\n             }    \r\n        ])\r\n    }\r\n\r\n     \r\n    // const RemFav = (e) =>{\r\n    //     e.preventDefault()\r\n    //     ListFavourites()\r\n    // }\r\n    \r\n    const RemoveFAv = () =>{\r\n        isFavorite(false)\r\n        setFav((fav.filter((mov) => mov.id !== item.id)))\r\n        item.Favourite = false\r\n       \r\n    }\r\n    // useEffect(()=>{\r\n    //     ListFavourites()\r\n    // },[Favourite])\r\n    // useEffect(() =>{\r\n    //     if(Favourite === true){\r\n    //         setMovie(fav)\r\n    //     }\r\n    //     isFavorite(false)\r\n    //  }, [fav])\r\n    \r\n        return (\r\n            <div>\r\n                <Cards key={item.id}  className=\"m-2\">\r\n                <ButtonGroup>\r\n                    <Button color=\"info\"  className=\"m-1\" onClick={viewMovie}> \r\n                    Check it out \r\n                    </Button>\r\n                    \r\n                   \r\n                        {item.Favourite  ?   <Button color=\"danger\"  className=\"m-1\"  onClick={RemoveFAv}><Delete/></Button>:\r\n                        <Button color=\"danger\"  className=\"m-1\" type=\"submit\" onSubmit={() => AddFav(item)} onClick={() => AddFAv(item) }><FavoriteIcon/></Button>\r\n                       }\r\n                   \r\n                </ButtonGroup>\r\n                  \r\n                <img className=\"m-2\" style={{width:\"200px\", height:\"200px\"}}\r\n                 src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${item.poster_path}`} alt={item.title}/>\r\n    \r\n                   <p><Badge style={{backgroundColor:'rgb(219, 156, 97)' ,fontFamily: 'monospace', float:'left', color: 'black', margin:'5px'}} className=\"ml-2\">{item.vote_average}</Badge><center>{item.title}</center></p> \r\n                    <Desc>\r\n                       {item.overview}\r\n                    </Desc>      \r\n                </Cards>\r\n         \r\n            </div>\r\n        )          \r\n}\r\n\r\nconst Cards = styled(Card)`\r\n    width: 220px;\r\n    height: 350px;\r\n`;\r\n\r\nconst Desc = styled(CardImgOverlay)`\r\n    position: absolute;\r\n    top: 20%;\r\n    left: 0;\r\n    font-size: 90%;\r\n    background-color: white;\r\n    transition: .5s  ease-in-out;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    overflow: auto;\r\n\r\n    &&:hover{\r\n        top: 15%;\r\n        opacity: 1;\r\n    }\r\n    \r\n`;\r\n\r\nexport default Movie;","export const Genres = [\r\n        {\r\n            \"id\":28,\r\n            \"name\":\"Action\"\r\n        },\r\n        {\r\n            \"id\":12,\r\n            \"name\":\"Adventure\"\r\n        },\r\n        {\r\n            \"id\":16,\r\n            \"name\":\"Animation\"\r\n        },\r\n        {\r\n            \"id\":35,\r\n            \"name\":\"Comedy\"\r\n        },\r\n        {\r\n            \"id\":80,\r\n            \"name\":\"Crime\"\r\n        },\r\n        {\r\n            \"id\":99,\r\n            \"name\":\"Docs\"\r\n        },\r\n        {\r\n            \"id\":18,\r\n            \"name\":\"Drama\"\r\n        },\r\n        {\r\n            \"id\":10751,\r\n            \"name\":\"Family\"\r\n        },\r\n        {\r\n            \"id\":14,\r\n            \"name\":\"Fantasy\"\r\n        },\r\n        {\r\n            \"id\":36,\r\n            \"name\":\"History\"\r\n        },\r\n        {\r\n            \"id\":27,\r\n             \"name\":\"Horror\"\r\n        },\r\n        {\r\n            \"id\":10402,\r\n            \"name\":\"Music\"\r\n        },\r\n        {\r\n            \"id\":9648,\r\n            \"name\":\"Mystery\"\r\n        },\r\n        {\r\n            \"id\":10749,\r\n            \"name\":\"Romance\"\r\n        },\r\n        {\r\n            \"id\":878,\r\n            \"name\":\"Sci-Fi\"\r\n        },\r\n        {\r\n            \"id\":10770,\r\n            \"name\":\"TV\"\r\n        },\r\n        {\r\n            \"id\":53,\r\n            \"name\":\"Thriller\"\r\n        },\r\n        {\r\n            \"id\":10752,\r\n            \"name\":\"War\"\r\n         },\r\n        {\r\n            \"id\":37,\r\n            \"name\":\"Western\"\r\n         }\r\n]","import { Button, InputGroup, ButtonGroup, Row  } from 'reactstrap'\r\nimport React,{useState, useEffect} from 'react'\r\nimport { Form, Input } from 'reactstrap'\r\nimport Movie from './Movie'\r\nimport { ArrowBack, ArrowForward, SearchRounded } from '@material-ui/icons'\r\nimport {Genres} from './Genre'\r\n\r\n\r\nconst MovieForm = ({query, setQuery, movie, setMovie, url, setUrl, pg, setPg, where, setWhere, genre, setGenre}) =>{\r\n    const [fav, setFav] = useState([ ])\r\n    const [Favourite, isFavorite] = useState(false)\r\n\r\n    \r\n    useEffect(() =>{\r\n        if(where === 'Favourite'){\r\n            document.title = `${where} ` \r\n        }\r\n        else{\r\n            document.title = `${where} page ${pg}` \r\n        }\r\n    },[url, where, pg])\r\n\r\n    const QueryHandler  = (e)=>{\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    const searchMovies = async (e)=>{\r\n        e.preventDefault()\r\n        try{\r\n            const res =await fetch(url)\r\n            const data = await res.json()\r\n            console.log(data.results)\r\n            setMovie(data.results)\r\n        }\r\n        catch(err){\r\n            <p>Error!</p>\r\n        }\r\n    }\r\n\r\n\r\n    const search = () =>{\r\n        console.log(pg)\r\n        setWhere('search')\r\n        setUrl(`https://api.themoviedb.org/3/search/movie?api_key=efebebf1d8f85627837d9fe3d0f69a96&query=${query}&page=${pg}&include_adult=false`)\r\n        \r\n    }\r\n    const popular = () =>{\r\n        console.log(pg)\r\n        setWhere('popular')\r\n        setUrl(`https://api.themoviedb.org/3/discover/movie?api_key=efebebf1d8f85627837d9fe3d0f69a96&page=${pg}&include_adult=false`)\r\n    }\r\n    const Genre = () =>{\r\n        console.log(pg)\r\n        setWhere('Genre')\r\n        setUrl(`https://api.themoviedb.org/3/discover/movie?api_key=efebebf1d8f85627837d9fe3d0f69a96&page=${pg}&include_adult=false&with_genres=${genre}`)\r\n    }\r\n\r\n    \r\n\r\n    const callPages =() =>{\r\n        if(pg === 0){\r\n            setPg(1)\r\n        }\r\n        switch (where) {\r\n            case 'search':\r\n               search()\r\n                break;\r\n            case 'popular':\r\n                popular() \r\n                break;\r\n            case 'Genre':\r\n                Genre() \r\n            break;\r\n            default:\r\n                setWhere('Favourite')\r\n                ListFavourites()  \r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n    const ShowFav= (e) =>{\r\n        e.preventDefault()\r\n    }\r\n    const ListFavourites = () =>{\r\n        setWhere('Favourite')\r\n        setMovie(fav)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        callPages()\r\n    },[pg])\r\n\r\n    useEffect(() =>{\r\n        Genre()\r\n    },[genre])\r\n\r\n    const GenreBased = (id) =>{\r\n        setGenre(id);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Form onSubmit={searchMovies}>\r\n                <ButtonGroup className=\"mb-3\">\r\n                    <Row>\r\n                        <Button outline color=\"primary\" className=\"m-1\" type=\"submit\" onClick={() => popular()}>Popular</Button>\r\n                        {Genres.map((items) =>{\r\n                            return(\r\n                                <Button outline color=\"secondary\" style={{width:'90px'}} className=\"m-1\" type=\"submit\"  \r\n                                onClick={() =>GenreBased(items.id)}>{items.name}</Button>\r\n                            )})}\r\n                    </Row>\r\n                </ButtonGroup>\r\n\r\n\r\n                <InputGroup className=\"mb-5\">\r\n                    <Input type=\"text\" placeholder=\"Enter a movie name..\" onChange={QueryHandler}></Input>\r\n                    <Button color=\"success\" className=\"ml-2\" type=\"submit\" onClick={search}><SearchRounded/></Button>\r\n                </InputGroup>\r\n            </Form>\r\n           \r\n            \r\n                \r\n                <ButtonGroup>\r\n                    <Button color=\"warning\" className=\"mb-3 mr-5 p-2\" type=\"submit\" onSubmit={ShowFav} onClick={ListFavourites}>Favourites</Button>\r\n                    <Form onSubmit={searchMovies}>\r\n                        <ButtonGroup>\r\n                            \r\n                            <p className=\"mb-3 p-2\" style={{color:'white'}}>Pages</p>\r\n                            <Button color=\"warning\" className=\"mb-3\" type=\"submit\"  onClick={() =>{setPg(pg-1)}}><ArrowBack /></Button>\r\n                            <p style={{color:'white', margin: '10px'}}>{pg}</p>\r\n                            <Button color=\"warning\" className=\"mb-3\" type=\"submit\"  onClick={() =>{setPg(pg+1)}} ><ArrowForward/></Button>\r\n                           \r\n                        </ButtonGroup>\r\n                    </Form> \r\n                </ButtonGroup>\r\n           \r\n\r\n            <Row>\r\n                {movie.map((item) =>{\r\n                    return(\r\n                        <Movie item={item} fav={fav} setFav={setFav} \r\n                         setMovie={setMovie} movie={movie} Favourite={Favourite} isFavorite={isFavorite} ListFavourites={ListFavourites}/>\r\n                    )})}\r\n            </Row>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// const Grids = styled.div`\r\n//     margin: 20px;\r\n//     display: grid;\r\n//     grid-template-columns: repeat(6, 1fr);\r\n\r\n//     @media (max-width: 1200px){\r\n//         grid-template-columns: repeat(4, 1fr);\r\n//     }\r\n//     @media (max-width: 1300px){\r\n//         grid-template-columns: repeat(3, 1fr);\r\n//     }\r\n//     @media (max-width: 1100px){\r\n//         grid-template-columns: repeat(2, 1fr);\r\n//     }\r\n//     @media (max-width: 600px){\r\n//         grid-template-columns: repeat(1, 1fr);\r\n//     }\r\n    \r\n// `;\r\n// const Contents = styled.div`\r\n//     display: grid;\r\n//     grid-template-columns: repeat(10, 1fr);\r\n//     @media (max-width: 1060px){\r\n//         grid-template-columns: repeat(5, 1fr);\r\n//     }\r\n//     @media (max-width: 600px){\r\n        \r\n//         grid-template-columns: repeat(4, 1fr);\r\n//     }\r\n// `; \r\n\r\nexport default MovieForm\r\n\r\n\r\n    \r\n","\r\nimport MovieForm from './MovieForm'\r\nimport React, {useState} from 'react'\r\nimport { Route } from 'react-router'\r\n\r\nfunction MovieContainer (){\r\n    //For the search input to be passed inside query\r\n    const [query, setQuery]= useState('')\r\n    //To display movie to the user\r\n    const [movie, setMovie]=useState([\r\n        {\r\n            Favourite: false\r\n        }\r\n    ])\r\n    //to set the query(search name) in teh url\r\n    const [url, setUrl] = useState(``)\r\n    //To set the page of the search\r\n    const [pg, setPg] = useState(1)\r\n    //To know from where this setPg is coming from Popular, search or Genre\r\n    const [where, setWhere] = useState('')\r\n    //set the Genre\r\n    const [genre, setGenre] = useState()\r\n\r\n    return(\r\n        <div >\r\n           <Route>\r\n            <div>\r\n               <h3 style={{color:\"white\", marginBottom: '20px'}}>React Movies App</h3>\r\n\r\n\r\n               <MovieForm query={query} setQuery={setQuery} movie={movie} \r\n               setMovie={setMovie} url={url} setUrl={setUrl} \r\n               pg={pg} setPg={setPg} where={where} setWhere={setWhere}\r\n               genre={genre} setGenre={setGenre}/>\r\n               \r\n               </div> \r\n           \r\n           </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieContainer","import {Route, Switch} from 'react-router-dom'\nimport \"./App.css\"\nimport MovieContainer from './Components/MovieContainer'\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App-header\">\n      <Switch>\n      \n      <Route path=\"/\" component={MovieContainer} exact />\n      \n      \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}